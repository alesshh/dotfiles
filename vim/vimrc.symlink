syntax on
call plug#begin('~/.vim/plugged')

" Source search and tree visualization
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'cocopon/vaffle.vim'

" Auto complete
if has('nvim')
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
else
  Plug 'Shougo/deoplete.nvim'
  Plug 'roxma/nvim-yarp'
  Plug 'roxma/vim-hug-neovim-rpc'
endif

" Formatters
Plug 'w0rp/ale'

" Language packs
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
Plug 'deoplete-plugins/deoplete-go'
Plug 'pangloss/vim-javascript'
Plug 'mxw/vim-jsx'
Plug 'mattn/emmet-vim'

Plug 'junegunn/vim-xmark', { 'do': 'make' }

" Git
Plug 'tpope/vim-fugitive'


" Auto close pairs
Plug 'cohama/lexima.vim'
Plug 'kien/rainbow_parentheses.vim'

" Comments
Plug 'scrooloose/nerdcommenter'

" Git
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'

" Theme
Plug 'cocopon/iceberg.vim'

" Lipstick
Plug 'wakatime/vim-wakatime'


call plug#end()

filetype plugin on

" Theme settings
if has('gui_macvim')
  set guifont=Fira\ Code:h13
endif
set background=dark
set termguicolors
colorscheme iceberg

" Editor settings
set number
set ruler
set cursorline
set mouse=a

" Use git
set nobackup
set noswapfile

" keep only tabs at gui
set guioptions=

" Invisible chars
set listchars=tab:→·,trail:·,extends:>,precedes:<,nbsp:+
set list

" Convert tabs
set expandtab
set shiftwidth=2

" Go settings
let g:go_fmt_command = "goimports"

" Leader shortcuts
let mapleader=","

let g:vaffle_show_hidden_fields = 1

map <leader>\ :Vaffle %:h<cr>

" Reload vim source
nnoremap <leader>sv :so $MYVIMRC<cr>

" Tabs navigation
noremap <leader>1 1gt
noremap <leader>2 2gt
noremap <leader>3 3gt
noremap <leader>4 4gt
noremap <leader>5 5gt
noremap <leader>6 6gt
noremap <leader>7 7gt
noremap <leader>8 8gt
noremap <leader>9 9gt
noremap <leader>0 :tablast<cr>
map <D-1> 1gt
map <D-2> 2gt
map <D-3> 3gt
map <D-4> 4gt
map <D-5> 5gt
map <D-6> 6gt
map <D-7> 7gt
map <D-8> 8gt
map <D-9> 9gt
map <D-0> :tablast<cr>

" Ctrl shortcuts
nnoremap <c-p> :FZF<cr>
nnoremap <c-f> :Ag<space>

" switch to last used buffer
nnoremap <leader>; :e#<CR>

" Move selection 1 line down or up
vnoremap J :m '>+1gv=gv<cr>
vnoremap K :m '<-2gv=gv<cr>

" FZF
let g:fzf_action = {
        \ 'return': 'tabe',
        \ 'ctrl-j': 'split',
        \ 'ctrl-k': 'vsplit' }

" Rainbow parenthesis
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces

" Copy file name
command! CopyFileName :let @+ = expand("%:t")
command! CopyFilePath :let @+ = expand("%:p")
command! CopyRelativeFilePath :let @+ = expand("%")

" Autocomplete
let g:deoplete#enable_at_startup = 1

" Ale
let g:ale_fixers = {}
let g:ale_linters = {}
let g:ale_fixers["*"] = ["remove_trailing_lines", "trim_whitespace"]
let g:ale_fixers["javascript"] = ["prettier"]
let g:ale_fixers["javascript.jsx"] = ["prettier"]
let g:ale_fixers["json"] = ["prettier"]
let g:ale_fixers["css"] = ["prettier"]
let g:ale_fixers["scss"] = ["prettier"]
let g:ale_fixers["yaml"] = ["prettier"]
let g:ale_fixers["ruby"] = ["rubocop"]
let g:ale_linters_explicit = 1
let g:ale_fix_on_save = 1
let g:ale_completion_enabled = 1

call plug#begin('~/.vim/plugged')

" Source search and tree visualization
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'scrooloose/nerdtree'

" Auto complete
Plug 'Shougo/deoplete.nvim'
Plug 'roxma/nvim-yarp'
Plug 'roxma/vim-hug-neovim-rpc'

" Language packs
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
Plug 'honza/vim-snippets'
Plug 'mattn/emmet-vim'
Plug 'sheerun/vim-polyglot'
Plug 'SirVer/ultisnips'
Plug  'zchee/deoplete-go'

" Lint
Plug 'w0rp/ale'

" Auto close pairs
Plug 'cohama/lexima.vim'

" Comments
Plug 'scrooloose/nerdcommenter'

" Git status visualization
Plug 'airblade/vim-gitgutter'

" Theme
Plug 'arcticicestudio/nord-vim'
Plug 'morhetz/gruvbox'

" Lipstick
Plug 'wakatime/vim-wakatime'

" Notes
Plug 'xolox/vim-misc'
Plug 'xolox/vim-notes'

call plug#end()

filetype plugin on

" Theme settings
set guifont=Hasklig:h16
set background=dark
colorscheme gruvbox
let g:nord_comment_brightness = 17
let g:nord_italic_comments = 1
let g:nord_cursor_line_number_background = 1

" Editor settings
set number
set relativenumber
set ruler
set cursorline
set mouse=a
set laststatus=2

" keep only tabs at gui
set guioptions=e

" Invisible chars
set listchars=tab:→·,trail:·,extends:>,precedes:<,nbsp:+
set list

" Convert tabs
set expandtab
set shiftwidth=2

" Nerdtree
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1

" Lint settings
let b:ale_fixers = {'javascript': ['prettier', 'eslint']}
let g:ale_fix_on_save = 1

" Go settings
let g:go_fmt_command = "goimports"

" Auto-complete
let g:deoplete#enable_at_startup = 1

" Notes
let g:notes_directories = ['~/Documents/Notes']
let g:notes_suffix = ".txt"

" Leader shortcuts
let mapleader=","

" Nerdtree
map <leader>\ :NERDTreeToggle<cr>

" Reload vim source
nnoremap <leader>sv :so $MYVIMRC<cr>

" Tabs navigation
noremap <leader>1 1gt
noremap <leader>2 2gt
noremap <leader>3 3gt
noremap <leader>4 4gt
noremap <leader>5 5gt
noremap <leader>6 6gt
noremap <leader>7 7gt
noremap <leader>8 8gt
noremap <leader>9 9gt
noremap <leader>0 :tablast<cr>

" Ctrl shortcuts
nnoremap <c-p> :FZF<cr>
nnoremap <c-f> :Ag<space>

let g:fzf_action = {
        \ 'return': 'tabe',
        \ 'ctrl-j': 'split',
        \ 'ctrl-k': 'vsplit' }

" Strip trailing spaces on save files
fun! StripTrailingWhitespaces()
    let save_cursor = getpos(".")
    let old_query = getreg('/')
    silent! %s/\s\+$//e
    call setpos('.', save_cursor)
    call setreg('/', old_query)
endfun

autocmd BufWritePre * :call StripTrailingWhitespaces()
